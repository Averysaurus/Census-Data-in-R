ca_hunits %>%
ggplot(aes(x = value, y = reorder(NAME, value))) +
geom_point()
# Fetch Avg family size by CA County
ca_hunits <- get_decennial(geography='county',
variables='P013001',
state='CA')
# plot it
ca_hunits %>%
ggplot(aes(x = value, y = reorder(NAME, value))) +
geom_point()
# Fetch Avg family size by CA County
ca_med_age <- get_decennial(geography='county',
variables='P037001',
state='CA')
# plot it
ca_med_age %>%
ggplot(aes(x = value, y = reorder(NAME, value))) +
geom_point()
vars2000 <- load_variables(year=2000, dataset = 'sf1', cache = T)
View(vars2000)
# Fetch Avg family size by CA County
ca_med_age <- get_decennial(geography='county',
variables='P037001',
state='CA',
year=2000)
# Plot Avg family size by CA County
ca_med_age %>%
ggplot(aes(x = value, y = reorder(NAME, value))) +
geom_point()
# Fetch Avg family size by CA County
ca_med_age <- get_decennial(geography='county',
variables='P037001',
state='CA',
year=2010)
# Plot Avg family size by CA County
ca_med_age %>%
ggplot(aes(x = value, y = reorder(NAME, value))) +
geom_point()
# Fetch Avg family size by CA County
ca_med_age <- get_decennial(geography='county',
variables='P033001',
state='CA',
year=2000)
# Plot Avg family size by CA County
ca_med_age %>%
ggplot(aes(x = value, y = reorder(NAME, value))) +
geom_point()
# Calculate overall average
ca_fam_size %>% mean()
ca_fam_size <- get_decennial(geography='county',
variables="P037001",
state='CA',
year=2010)
# Calculate overall average
ca_fam_size %>% mean()
# Calculate overall average
ca_fam_size %>% mean('value')
# Calculate overall average
ca_fam_size %>% mean(., value)
# Calculate overall average
ca_fam_size %>% mean(value)
View(ca_fam_size)
# Calculate overall average
mean(ca_fam_size$value)
# Calculate overall average
mean(ca_fam_size2000$value)
# Fetch Avg family size by CA County in 2000
ca_med_age2000 <- get_decennial(geography='county',
variables='P033001',
state='CA',
year=2000)
# Calculate overall average
mean(ca_fam_size2000$value)
# Fetch Avg family size by CA County in 2000
ca_fam_size2000 <- get_decennial(geography='county',
variables='P033001',
state='CA',
year=2000)
# Calculate overall average
mean(ca_fam_size2000$value)
# Plot Avg family size by CA County
ca_fam_size2000 %>%
ggplot(aes(x = value, y = reorder(NAME, value))) +
geom_point()
ca_tract_pop201- <- get_decennial(geography = "tract",   # census tabulation unit
variables = "P001001", # variables of interest
year = 2010,           # census year
state='CA')      # State filter
dim(ca_tract_pop2010)
ca_tract_pop2010 <- get_decennial(geography = "tract",   # census tabulation unit
variables = "P001001", # variables of interest
year = 2010,           # census year
state='CA')      # State filter
dim(ca_tract_pop2010)
# take a look
head(ca_tract_pop2010)
pop2000 <- get_decennial(geography = "state",
variables = c(pop00="P001001"),
year = 2000)
pop2010 <- get_decennial(geography = "state",
variables = c(pop10="P001001"),
year = 2010 )
head(pop2000)
head(pop2010)
doh<- bind_rows(pop2000, pop2010)
head(doh)
tail(doh)
pop2010geo <- get_decennial(geography = "state",
variables = c(pop10="P001001"),
year = 2010,
output="wide",
geometry=TRUE) # Fetch geometry with the data for mapping
head(pop2010geo, 3)
plot(pop2010geo$geometry)
plot(pop2010geo)
plot(pop2010geo_shifted['pop10'])  # a choropleth map!
pop2010geo_shifted <- get_decennial(geography = "state",
variables = c(pop10="P001001"),
output="wide",
year = 2010,
geometry=TRUE,
shift_geo=TRUE)
plot(pop2010geo_shifted$geometry)
pop2010geo_shifted <- get_decennial(geography = "state",
variables = c(pop10="P001001"),
year = 2010,
geometry=TRUE,
shift_geo=TRUE)
head(pop2010geo_shifted)
plot(pop2010geo_shifted['value'])
ggplot(pop2010geo_shifted, aes(fill = pop10)) +
geom_sf()  # tells ggplot that geographic data are being plotted
pop2010geo_shifted <- get_decennial(geography = "state",
variables = c(pop10="P001001"),
output="wide",
year = 2010,
geometry=TRUE,
shift_geo=TRUE)
ggplot(pop2010geo_shifted, aes(fill = pop10)) +
geom_sf()  # tells ggplot that geographic data are being plotted
ggplot(pop2010geo_shifted, aes(fill = pop10)) +
geom_sf(color=NA)  # tells ggplot that geographic data are being plotted
ggplot(pop2010geo_shifted, aes(fill = pop10)) +
geom_sf(color="white")  # tells ggplot that geographic data are being plotted
ggplot(pop2010geo_shifted, aes(fill = pop10)) +
geom_sf(color="grey")  # tells ggplot that geographic data are being plotted
ggplot(pop2010geo_shifted, aes(fill = pop10)) +
geom_sf()  # tells ggplot that geographic data are being plotted
alcc_pop10 <- get_decennial(geography = "tract",
variables = "P001001",
year = 2010,
state='CA',
county=c("Alameda","Contra Costa"),
geometry=T)
plot(alcc_pop10['value'])
sf_rented <- get_decennial(geography = "tract",  # census tabulation unit
variables =  "H004004", #number of households rented
year = 2010,
summary_var = "H004001",  # Total households
state='CA',
county='San Francisco',
geometry=T)
sf_pct_rented <- sf_rented[sf_rented$value > 0,] %>%
mutate(pct = 100 * (value / summary_value))
# Take a look
head(sf_pct_rented)
plot(sf_pct_rented['pct'])
#fetch it
ca_med_age <- get_decennial(geography = "county",
variables = "P013001",
year = 2010,
state='CA',
geometry=TRUE)
# map it with plot
plot(ca_med_age['value'])
# map it with ggplot
ca_med_age %>%
ggplot(aes(fill = value)) +
geom_sf(color = NA) +
coord_sf(crs = 26910) +
scale_fill_viridis_c(option = "magma")
ca_med_age <- get_decennial(geography = "county",
variables = "P013001",
year = 2010,
state='CA',
geometry=TRUE)
# map it with plot
plot(ca_med_age['value'])
ca_med_age %>%
ggplot(aes(fill = value)) +
geom_sf(color = NA) +
coord_sf(crs = 26910) +
scale_fill_viridis_c(option = "magma")
ca_med_age %>%
ggplot(aes(fill = value)) +
geom_sf(color = NA) +
coord_sf(crs = 3310) +
scale_fill_viridis_c(option = "magma")
ca_med_age %>%
ggplot(aes(fill = value)) +
geom_sf(color = NA) +
coord_sf(crs = 3310) +
scale_fill_viridis_c(option = "viridis")
ca_med_age %>%
ggplot(aes(fill = value)) +
geom_sf(color = NA) +
#coord_sf(crs = 3310) +
scale_fill_viridis_c(option = "viridis")
ca_med_age %>%
ggplot(aes(fill = value)) +
geom_sf() +
#coord_sf(crs = 3310) +
scale_fill_viridis_c(option = "viridis")
ca_med_age %>%
ggplot(aes(fill = value)) +
geom_sf()
ggplot(pop2010geo_shifted, aes(fill = pop10)) +
geom_sf()
ggplot(pop2010geo_shifted, aes(fill = pop10)) +
geom_sf(color=NA)  # What does color=NA do
ggplot(pop2010geo_shifted, aes(fill = pop10)) +
geom_sf(color=NA) + # What does color=NA do
coord_sf(crs = 5070) # what?
ggplot(pop2010geo_shifted, aes(fill = pop10)) +
geom_sf(color=NA) + # What does color=NA do
#coord_sf(crs = 5070) # what?
ggplot(pop2010geo_shifted, aes(fill = pop10)) +
geom_sf(color=NA) #+ # What does color=NA do
#coord_sf(crs = 5070) # what?
ggplot(pop2010geo_shifted, aes(fill = pop10)) +
geom_sf(color=NA) + # What does color=NA do
coord_sf(crs = 3857) # what?
ggplot(pop2010geo_shifted, aes(fill = pop10)) +
geom_sf(color=NA) + # What does color=NA do
coord_sf(crs = 3857) + # What does this line do?
scale_fill_viridis_c(option = "viridis")
?scale_fill_continuous
?scale_fill_viridis
?scale_fill_viridis_c
?scales::viridis_pal
ggplot(pop2010geo_shifted, aes(fill = pop10)) +
geom_sf(color=NA) + # What does color=NA do
coord_sf(crs = 3857) + # Dynamically change the CRS
scale_fill_viridis_c(option = "magma")  # Change the color palette
# Try different options
# magma, plasma, inferno, cividis
ggplot(pop2010geo_shifted, aes(fill = pop10)) +
geom_sf(color=NA) + # What does color=NA do
coord_sf(crs = 3857) + # Dynamically change the CRS
scale_fill_viridis_c(option = "plasma")  # Change the color palette
# Try different options
# magma, plasma, inferno, cividis
ggplot(pop2010geo_shifted, aes(fill = pop10)) +
geom_sf(color=NA) + # What does color=NA do
coord_sf(crs = 3857) + # Dynamically change the CRS
scale_fill_viridis_c(option = "inferno")  # Change the color palette
# Try different options
# magma, plasma, inferno, cividis
ggplot(pop2010geo_shifted, aes(fill = pop10)) +
geom_sf(color=NA) + # What does color=NA do
coord_sf(crs = 3857) + # Dynamically change the CRS
scale_fill_viridis_c(option = "cividis")  # Change the color palette
# Try different options
# magma, plasma, inferno, cividis
ggplot(pop2010geo_shifted, aes(fill = pop10)) +
geom_sf(color=NA) + # What does color=NA do
coord_sf(crs = 3857) + # Dynamically change the CRS
scale_fill_viridis_c(option = "magma")  # Change the color palette
ggplot(pop2010geo_shifted, aes(fill = pop10)) +
geom_sf(color=NA) + # What does color=NA do
coord_sf(crs = 3857) + # Dynamically change the CRS
scale_fill_viridis_c(option = "plasma")  # Change the color palette
ca_med_age <- get_decennial(geography = "county",
variables = "P013001",
year = 2010,
state='CA',
geometry=TRUE)
# map it with plot
plot(ca_med_age['value'])
# map it with ggplot
ca_med_age %>%
ggplot(aes(fill = value)) +
geom_sf(color=NA) +
coord_sf(crs = 3310) +
scale_fill_viridis_c(option = "viridis")
bay_counties <- c("Alameda", "Contra Costa", "Marin", "San Francisco",
"Sonoma", "Napa","Solano")
bayarea_pop10 <- get_decennial(geography = "tract",
variables = "P001001",
year = 2010,
state='CA',
county=bay_counties,
geometry=T)
plot(bayarea_pop10['value'])
bay_counties <- c("Alameda", "Contra Costa", "Marin", "San Francisco",
"Sonoma", "Napa","Solano", "San Mateo")
bayarea_pop10 <- get_decennial(geography = "tract",
variables = "P001001",
year = 2010,
state='CA',
county=bay_counties,
geometry=T)
plot(bayarea_pop10['value'])
bay_counties <- c("Alameda", "Contra Costa", "Marin", "San Francisco",
"Sonoma", "Napa","Solano", "San Mateo", "Santa Clara")
bayarea_pop10 <- get_decennial(geography = "tract",
variables = "P001001",
year = 2010,
state='CA',
county=bay_counties,
geometry=T)
plot(bayarea_pop10['value'])
# take a look
head(bayarea_pop10)
# Quick map
plot(bayarea_pop10['value'])
?get_acs
?load_variables
acs2019vars <- load_variables(year=2019, # the end year of the 2015-2019 period
dataset = 'acs5', # the ACS data product
cache = T) # Save locally for future access
# how big
dim(acs2019vars)
View(acs2019vars)
acs2019vars <- load_variables(year=2020, # the end year of the 2015-2019 period
dataset = 'acs5', # the ACS data product
cache = T) # Save locally for future access
# how many variables?
dim(acs2019vars)
# Take a look
#View(acs2016vars)
# how many variables?
dim(acs2019vars)
acs2019vars <- load_variables(year=2021, # the end year of the 2015-2019 period
dataset = 'acs5', # the ACS data product
cache = T) # Save locally for future access
vars_acs2020 <- load_variables(year=2020, # the end year of the 2016-2020 period
dataset = 'acs5', # the ACS data product
cache = T) # Save locally for future access
# how many variables?
dim(vars_acs2020)
vars_acs2020 <- load_variables(year=2020, # the end year of the 2016-2020 period
dataset = 'acs5', # the ACS data product
cache = T) # Save locally for future access
# how many variables?
dim(vars_acs2020)
vars_acs2020 <- load_variables(year=2019, # the end year of the 2016-2020 period
dataset = 'acs5', # the ACS data product
cache = T) # Save locally for future access
vars_acs2020 <- load_variables(year=2020, # the end year of the 2016-2020 period
dataset = 'acs5', # the ACS data product
cache = T) # Save locally for future access
vars_acs2019 <- load_variables(year=2019, # the end year of the 2016-2020 period
dataset = 'acs5', # the ACS data product
cache = T) # Save locally for future access
# how many variables?
dim(vars_acs2019)
# Take a look
#View(vars_acs2019)
View(vars_acs2019)
?get_acs
# Median household income by race/ethnicity: Variables from ACS 2015—19
inc_by_race <- c(All =   "B19013_001",
White = "B19013H_001",
Black = "B19013B_001",
Asian = "B19013D_001",
Hispanic = "B19013I_001" )
alco_mhhincome_by_race <- get_acs(geography='tract',
variables=inc_by_race,
year = 2019,
state='CA',
county='Alameda',
geometry=T )
medhhinc_facet_map <- alco_mhhincome_by_race %>%
ggplot(aes(fill = estimate)) +
facet_wrap(~variable) +
geom_sf(color=NA) +
scale_fill_viridis_c()
medhhinc_facet_map
inc_by_race <- c(White = "B19013H_001",
Black = "B19013B_001",
Asian = "B19013D_001",
Hispanic = "B19013I_001" )
alco_mhhincome_by_race <- get_acs(geography='tract',
variables=inc_by_race,
year = 2019,
state='CA',
county='Alameda',
geometry=T )
medhhinc_facet_map <- alco_mhhincome_by_race %>%
ggplot(aes(fill = estimate)) +
facet_wrap(~variable) +
geom_sf(color=NA) +
scale_fill_viridis_c()
medhhinc_facet_map
View(alco_mhhincome_by_race)
medhhinc_facet_map <- alco_mhhincome_by_race %>%
ggplot(aes(fill = estimate)) +
facet_wrap(~variable) +
geom_sf(color=NA) +
scale_fill_viridis_c(option="magma")
medhhinc_facet_map
alco_mhhincome_by_race2 <- get_acs(geography='tract',
variables=inc_by_race,
year = 2019,
state='CA',
county='Alameda',
geometry=T,
output="wide")
head(alco_mhhincome_by_race2)
alcc_medrent <- get_acs(geography="tract",
variables=c(median_rent2019="B25064_001"),
year =2019,
state="CA",
county=c("Alameda","Contra Costa"),
geometry=T)
# Uncomment to view map
plot(alcc_medrent['estimate'])
alcc_medrent %>%
ggplot(aes(fill = estimate)) +
geom_sf(color=NA) +
coord_sf(crs = 26910) +  # CRS for Northern CA - UTM 10
scale_fill_viridis_c(option = "viridis")
alco_mhhincome <- get_acs(geography='tract',
variables=c(median_hhincome = "B19013_001"),
year = 2019,
state='CA',
county='Alameda',
geometry=TRUE
)
plot(alco_mhhincome['estimate'])
alco_mhhinc_by_race <- get_acs(geography='tract',
variables=inc_by_race,
year = 2019,
state='CA',
county='Alameda',
geometry=T )
medhhinc_facet_map <- alco_mhhinc_by_race %>%
ggplot(aes(fill = estimate)) +
facet_wrap(~variable) +
geom_sf(color=NA) +
scale_fill_viridis_c(option="magma")
# Create the map
medhhinc_facet_map <- alco_mhhinc_by_race %>%
ggplot(aes(fill = estimate)) +
facet_wrap(~variable) +
geom_sf(color=NA) +
scale_fill_viridis_c(option="magma")
# Display the map
medhhinc_facet_map
alcc_medrent %>%
ggplot(aes(fill = estimate)) +
geom_sf(color=NA) +
coord_sf(crs = 26910) +  # CRS for Northern CA - UTM 10
scale_fill_viridis_c(option = "viridis")
alcc_medrent %>%
ggplot(aes(fill = estimate)) +
geom_sf(color=NA) +
coord_sf(crs = 26910) +  # CRS for Northern CA - UTM 10
scale_fill_viridis_c(option = "viridis")
sf_medrent <- get_acs(geography="tract",
variables=c(median_rent2019="B25064_001"),
year =2019,
state="CA",
county=c("San Francisco"),
geometry=T)
# Map it with plot
plot(sf_medrent['estimate'])
# Map it with plot
plot(sf_medrent[sf_medrent > 100,]['estimate'])
# Map it with plot
plot(sf_medrent[sf_medrent$estimate > 100,]['estimate'])
# Map it with plot
plot(sf_medrent[sf_medrent$estimate > 1,]['estimate'])
# Map it with plot
plot(sf_medrent[sf_medrent$estimate > 0,]['estimate'])
# Map it with plot
plot(sf_medrent[sf_medrent$estimate >= 0,]['estimate'])
summary(sf_medrent$estimate)
# Map it with plot
plot(sf_medrent[na.rm(sf_medrent$estimate),]['estimate'])
# Map it with plot
plot(sf_medrent[!is.na(sf_medrent$estimate),]['estimate'])
sf_medrent %>%
filter(not_na(estimate))  %>%
ggplot(aes(fill = estimate)) +
geom_sf(color=NA) +
coord_sf(crs = 26910) +  # CRS for Northern CA - UTM 10
scale_fill_viridis_c(option = "viridis")
sf_medrent %>%
drop_na(estimate)  %>%
ggplot(aes(fill = estimate)) +
geom_sf(color=NA) +
coord_sf(crs = 26910) +  # CRS for Northern CA - UTM 10
scale_fill_viridis_c(option = "viridis")
sf_medrent %>%
drop_na(estimate)  %>%
ggplot(aes(fill = estimate)) +
geom_sf(color=NA) +
coord_sf(crs = 26910) +  # CRS for Northern CA - UTM 10
scale_fill_viridis_c(option = "plasma")
sf_medrent %>%
drop_na(estimate)  %>%
ggplot(aes(fill = estimate)) +
geom_sf(color=NA) +
coord_sf(crs = 26910) +  # CRS for Northern CA - UTM 10
scale_fill_viridis_c(option = "magma")
mapview(alco_mhhinc_by_race)
mapview(alco_mhhincome)
mapview(alco_mhhincome, zcol="AllE")
mapview(alco_mhhincome, zcol="estimate")
