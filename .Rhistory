plot(sf_poor5['pct_below_pov'])
# Chunk 64
library(tmap)
tmap_mode("view") # set mode to interactive
poverty_map <- tm_shape(sf_poor5) +
tm_polygons(col="pct_below_pov")
# Chunk 65
poverty_map
# Chunk 66
sf_poor_cb <- get_acs(geography = "tract",
table = "C17002",
summary_var = "C17002_001",
year = 2016,
state="CA",
county="San Francisco",
geometry=TRUE,
cb = TRUE)     # THIS IS THE DEFAULT!
# Chunk 67
sf_poor_tl <- get_acs(geography = "tract",
table = "C17002",
summary_var = "C17002_001",
year = 2016,
state="CA",
county="San Francisco",
geometry=TRUE,
cb = FALSE)  # Fetching the TIGER/Line data
# Chunk 68
par(mfrow=c(1,2))
plot(sf_poor_cb[sf_poor$summary_est>0,]$geometry)
plot(sf_poor_tl[sf_poor$summary_est>0,]$geometry)
par(mfrow=c(1,1))
# Chunk 69
tm_shape(sf_poor_tl) +
tm_borders() +
tm_shape(sf_poor_cb) +
tm_borders(col="red")
# Chunk 70
# Load cenvar lookup table of vars of interest
my_cenvar_df <-read.csv("data/cenvar_lookup.csv", strip.white = T, stringsAsFactors = F)
my_cenvar_df
# Chunk 71
nine_counties <- c("001", "075", "013", "041", "055", "081", "085", "095", "097")
bay9_data <-get_acs(geography = "tract",
variables = my_cenvar_df$my_cen_vars,
year=2016,
state = "CA",
county = nine_counties,
geometry = T)
bay9_data
# Chunk 72
bay9_data2 <- bay9_data %>%
select("GEOID", "variable", "estimate") %>%
spread(key=variable, value=estimate)
# Chunk 73
bay9_data2
# Chunk 74
colnames(bay9_data2)<-c("GEOID", my_cenvar_df$my_cen_var_names, "geometry")
# Chunk 75
bay9_data2
tract_pop2010 <- get_decennial(geography = "tract",   # census tabulation unit
variables = "P001001",       # variable of interest
year = 2010,                 # census year
state="CA",                  # limit to state of California
county=c("Alameda","Contra Costa"))
tract_pop2010
alco_pop2010 <- get_decennial(geography = "county",   # census tabulation unit
variables = "P001001",  # variables of interest
year = 2010,
state=c('CA'))
alcal_pop2010
alco_pop2010
alco_pop2010 <- get_decennial(geography = "county",   # census tabulation unit
variables = "P001001",  # variables of interest
year = 2010,
state=c('CA'),
county=c('Alameda County'))
alco_pop2010
nine_counties <- c("001", "075", "013", "041", "055", "081", "085", "095", "097")
bayarea_pop2010_tract <- get_decennial(geography = "tract",   # census tabulation unit
variables = "P001001",       # variable of interest
year = 2010,                 # census year
state="CA",                  # limit to state of California
county=nine_counties)  # and only these counties
bayarea_pop2010_tract
tail(bayarea_pop2010_tract)
# County FIPs Codes for
# Alameda, SF, Contra Costa, Marin County, Napa,
# San Mateo, Santa Clara,  Solano,  Sonoma, santa cruz
nine_counties <- c("001", "075", "013", "041", "055", "081", "085", "095", "097")
# population by **county** for Alameda County, California
alco_pop2010 <- get_decennial(geography = "county",   # census tabulation unit
variables = "P001001",  # variables of interest
year = 2010,
state=c('CA'),
county=c('Alameda County'))
alco_pop2010
# Fetch population by **tract** for the nine county Bay Area
# County FIPs Codes for
# Alameda, SF, Contra Costa, Marin County, Napa,
# San Mateo, Santa Clara,  Solano,  Sonoma, santa cruz
nine_counties <- c("001", "075", "013", "041", "055", "081", "085", "095", "097")
bayarea_pop2010_tract <- get_decennial(geography = "tract",   # census tabulation unit
variables = "P001001",       # variable of interest
year = 2010,                 # census year
state="CA",                  # limit to state of California
county=nine_counties)  # and only these counties
bayarea_pop2010_tract
ur_pop10 <- get_decennial(geography = "county",  # census tabulation unit
variables = c(urban="P002002",rural="P002005"),
year = 2010,
summary_var = "P002001",  # The denominator
state='CA',
county=c("Napa","Sonoma","Mendocino"))
ur_pop10
myplot <- ggplot(data = ur_pop10,
mapping = aes(x = NAME, fill = variable,
y = ifelse(test = variable == "urban",
yes = -pct, no = pct))) +
geom_bar(stat = "identity") +
scale_y_continuous(labels = abs, limits=c(-100,100)) +
labs(title="Urban & Rural Population in Wine Country",
x="County", y = " Percent of Population", fill="") +
coord_flip()
myplot
ur_pop10 <- get_decennial(geography = "county",  # census tabulation unit
variables = c(urban="P002002",rural="P002005"),
year = 2010,
summary_var = "P002001",  # The denominator
state='CA',
county=c("Napa","Sonoma","Mendocino"))
ur_pop10
## plot it
myplot <- ggplot(data = ur_pop10,
mapping = aes(x = NAME, fill = variable,
y = ifelse(test = variable == "urban",
yes = -pct, no = pct))) +
geom_bar(stat = "identity") +
scale_y_continuous(labels = abs, limits=c(-100,100)) +
labs(title="Urban & Rural Population in Wine Country",
x="County", y = " Percent of Population", fill="") +
coord_flip()
myplot
ur_pop10
ur_pop10 <- ur_pop10 %>%
mutate(pct = 100 * (value / summary_value))
ur_pop10
get_decennial(geography = "state", variables = "P001001", year = 2010)
get_decennial(geography = "state", variables = c(pop10="P001001"), year = 2010)
get_decennial(geography = "state", variables = c(pop00="P001001"), year = 2010, output="wide")
head(get_decennial(geography = "state", variables = "P001001", year = 2010), 2)
head(get_decennial(geography = "state", variables = c(pop10="P001001"), year = 2010), 2)
head(get_decennial(geography = "state", variables = "P001001", year = 2010),2)
head(get_decennial(geography = "state", variables = c(pop10="P001001"), year = 2010),2)
head(get_decennial(geography = "state", variables = c(pop00="P001001"), year = 2010, output="wide"), 2)
pop2000_2010 <- ggplot() +
geom_bar(data=pop2000_2010, aes(x=reorder(NAME,pop10), y=pop10/1000000),
stat="identity") + coord_flip() +
geom_point(data=pop2000_2010, aes(x=reorder(NAME,pop10), y=pop00/1000000,
col="red")) + coord_flip()
pop2000_2010
Sys.getenv('TIGRIS_CACHE_DIR')
pop2010geo <- get_decennial(geography = "state",
variables = c(pop10="P001001"),
year = 2010,
output="wide",
geometry=TRUE) # Fetch geometry with the data for mapping
pop2010geo
my_cache_dir <- Sys.getenv('TIGRIS_CACHE_DIR')
dir(my_cache_dir) # What files stored there?
west_pop10 <- get_decennial(geography = "county",
variables =  "P001001",
year = 2010,
state=c('CA','OR','NV',"AZ"),
geometry=T)
plot(west_pop10['value'])
acsvars <- load_variables(dataset = 'acs5', cache = T)
acsvars <- load_variables(year=2017,dataset = 'acs5', cache = T)
sf_poor <- get_acs(geography = "tract",
table = "C17002",     # Table: ratio income to poverty
state="CA",
summary_var = "C17002_001", # Est of num people - denom
county="San Francisco",
geometry=T)
sf_poor <- get_acs(geography = "tract",
table = "C17002",     # Table: ratio income to poverty
year = 2016,
state="CA",
summary_var = "C17002_001", # Est of num people - denom
county="San Francisco",
geometry=T)
sf_poor
sf_poor2 <- subset(sf_poor, summary_est > 0)
plot(sf_poor2['estimate'])
head(sf_poor, 3)
acs2016vars <- load_variables(year=2016, dataset = 'acs5', cache = T)
View(acs2016vars)
View(acs2016vars)
plot(sf_poor2[sf_poor2$variable=='C17002_002',]['estimate'])
View(acs2016vars)
plot(sf_poor2[sf_poor2$variable %in% c('C17002_002','C17002_002')]['estimate'])
plot(sf_poor2[sf_poor2$variable %in% c('C17002_002','C17002_002'),]['estimate'])
plot(sf_poor2[sf_poor2$variable %in% c('C17002_002','C17002_003'),]['estimate'])
sf_poor
sf_poor3 <- sf_poor2 %>%
mutate(pct = 100 * (estimate / summary_est))
sf_poor3
sf_poor4 <- subset(sf_poor3, (variable %in% c("C17002_002","C17002_003")))
head(sf_poor4)
sf_poor5 <- sf_poor4 %>%
select(GEOID, pct, geometry) %>%
group_by(GEOID) %>%
summarise(pct_below_pov = sum(pct))
head(sf_poor5)
plot(sf_poor5['pct_below_pov'])
pov_map
pov_map
# Remove census tracts that have no people!
sf_poor2 <- subset(sf_poor, summary_est > 0)
# Create the map
pov_map <- plot(sf_poor2[sf_poor2$variable %in% c('C17002_002','C17002_003'),]['estimate'])
pov_map
sf_poor <- get_acs(geography = "tract",
table = "C17002",     # Table: ratio income to poverty
year = 2016,
state="CA",
summary_var = "C17002_001", # Est of num people - denom
county="San Francisco",
geometry=T)
# Remove census tracts that have no people!
sf_poor2 <- subset(sf_poor, summary_est > 0)
# Create the map
pov_map <- plot(sf_poor2[sf_poor2$variable %in% c('C17002_002','C17002_003'),]['estimate'])
pov_map
sf_poor <- get_acs(geography = "tract",
table = c('C17002_002','C17002_003'), # poverty variables
year = 2016,
state="CA",
summary_var = "C17002_001", # Est of num people - denom
county="San Francisco",
geometry=T)
sf_poor <- get_acs(geography = "tract",
variables = c('C17002_002','C17002_003'), # poverty variables
year = 2016,
state="CA",
summary_var = "C17002_001", # Est of num people - denom
county="San Francisco",
geometry=T)
sf_poor
sf_poor <- subset(sf_poor, summary_est > 0)
# Create the map
pov_map <- plot(sf_poor['estimate'])
pov_map
sf_poor <- sf_poor %>%
mutate(pct = 100 * (estimate / summary_est))
head(sf_poor, 3)
sf_poor2 <- sf_poor %>%
select(GEOID, pct, geometry) %>%
group_by(GEOID) %>%
summarise(pct_below_pov = sum(pct))
head(sf_poor2)
plot(sf_poor2['pct_below_pov'])
plot(sf_poor['pct_below_pov'])
plot(sf_poor['pct_below_pov'])
plot(sf_poor['pct'])
plot(sf_poor2['pct_below_pov'])
sf_poor
pov_map
sf_poor <- subset(sf_poor, summary_est > 0)
pov_map <- plot(sf_poor['estimate'])
pov_map
sf_poor <- get_acs(geography = "tract",
variables = c('C17002_002','C17002_003'), # poverty variables
year = 2016,
state="CA",
summary_var = "C17002_001", # Est of num people - denom
county="San Francisco",
geometry=T)
sf_poor <- subset(sf_poor, summary_est > 0)
pov_map <- plot(sf_poor['estimate'])
pov_map
plot(sf_poor['estimate'])
sf_poor <- subset(sf_poor, summary_est > 0)
plot(sf_poor['estimate'])
x<- plot(sf_poor['estimate'])
x
plot(sf_poor['estimate'])
sf_poor <- sf_poor %>%
mutate(pct = 100 * (estimate / summary_est))
head(sf_poor, 3)
sf_poor2 <- sf_poor %>%
select(GEOID, estimate, pct, geometry) %>%
group_by(GEOID) %>%
summarise(count_below_pov = sum(estimate),
pct_below_pov = sum(pct))
head(sf_poor2)
plot(sf_poor2['count_below_pov'])
plot(sf_poor2['pct_below_pov'])
plot(sf_poor2['count_below_pov'])
plot(sf_poor['estimate'])
sf_poor_summed <- sf_poor %>%
select(GEOID, estimate, pct, geometry) %>%
group_by(GEOID) %>%
summarise(count_below_pov = sum(estimate),
pct_below_pov = sum(pct))
head(sf_poor_summed)
library(tmap)
tmap_mode("view") # set mode to interactive
poverty_map <- tm_shape(sf_poor_summed) +
tm_polygons(col="pct_below_pov")
poverty_map
sf_poor_cb <- get_acs(geography = "tract",
variables = c('C17002_002','C17002_003'), # poverty variables
summary_var = "C17002_001",
year = 2016,
state="CA",
county="San Francisco",
geometry=TRUE,
cb = TRUE)     # THIS IS THE DEFAULT!
sf_poor_tl <- get_acs(geography = "tract",
variables = c('C17002_002','C17002_003'), # poverty variables
summary_var = "C17002_001",
year = 2016,
state="CA",
county="San Francisco",
geometry=TRUE,
cb = FALSE)  # Fetching the TIGER/Line data
tm_shape(sf_poor_tl) +
tm_borders() +
tm_shape(sf_poor_cb) +
tm_borders(col="red")
sf_poor_2017 <- get_acs(geography = "tract",
variables = c('C17002_002','C17002_003'), # poverty variables
year = 2017,
state="CA",
summary_var = "C17002_001", # Est of num people - denom
county="San Francisco",
geometry=T)
head(sf_poor_2017)
View(sf_poor)
sf_poor <- get_acs(geography = "tract",
variables = c('C17002_002','C17002_003'), # poverty variables
year = 2016,
state="CA",
summary_var = "C17002_001", # Est of num people - denom
county="San Francisco",
geometry=T)
plot(sf_poor['estimate'])
sf_poor
head(sf_poor)
head(sf_poor[1:])
head(sf_poor[1:,])
View(sf_poor)
library(tidycensus)
library(tidyverse)
library(tigris)
library(sf)
source('../../keys/census_api_key.R')
census_api_key(my_census_api_key)
setwd("~/Documents/Dlab/workshops/2019/rCensus_workshop")
dir()
vars2010 <- load_variables(year=2010,        # Year or end year for ACS
dataset = 'sf1',  # 'sf1' for decennial or 'acs5'
cache = TRUE)     # Whether to save fetched data locally
View(vars2010)
pop2010 <- get_decennial(geography = "state",   # census tabulation unit
variables = "P001001", # variable(s) of interest
year = 2010)           # census year
View(pop2010)
# Fetch the 2000 pop data
pop2000 <- get_decennial(geography = "state", variables = "P001001", year = 2000)
# Take a look (plot if time)
pop2000
vars2000 <- load_variables(year=2000, dataset = 'sf1', cache = T)
View(vars2000)
state_pop2010 <- get_decennial(geography = "state", # census tabulation unit
variables = "P001001",     # variables of interest
year = 2010,               # census year
state=c("CA","OR","WA"))   # Filter by states of interest
View(pop2010)
View(state_pop2010)
co_pop2010 <- get_decennial(geography = "county",   # census tabulation unit
variables = "P001001",  # variables of interest
year = 2010)
View(co_pop2010)
calco_pop2010 <- get_decennial(geography = "county",   # census tabulation unit
variables = "P001001",  # variables of interest
year = 2010,
county="CA")
calco_pop2010 <- get_decennial(geography = "county",   # census tabulation unit
variables = "P001001",  # variables of interest
year = 2010,
county=c("CA"))
calco_pop2010 <- get_decennial(geography = "county",   # census tabulation unit
variables = "P001001",  # variables of interest
year = 2010,
state=c("CA"))
View(calco_pop2010)
View(pop2010)
calco_pop2010 <- get_decennial(geography = c("state","county"),   # census tabulation unit
variables = "P001001",  # variables of interest
year = 2010,
state=c("CA"))
calco_pop2010 <- get_decennial(geography = "county",   # census tabulation unit
variables = "P001001",  # variables of interest
year = 2010,
state=c("CA"))
View(calco_pop2010)
caltracts_pop2010 <- get_decennial(geography = "tract",   # census tabulation unit
variables = "P001001",  # variables of interest
year = 2010,
state=c("CA"))
View(calco_pop2010)
caltracts_pop2010 <- get_decennial(geography = "tract",   # census tabulation unit
variables = "P001001",  # variables of interest
year = 2010,
state=c("CA"),
county=c("001"))
View(calco_pop2010)
View(calco_pop2010)
View(caltracts_pop2010)
caltracts_pop2010 <- get_decennial(geography = "tract",   # census tabulation unit
variables = "P001001",  # variables of interest
year = 2010,
state=c("CA"),
county=c("Alameda County"))
get_decennial(geography = "state", variables = "P001001", year = 2010)
get_decennial(geography = "state", variables = c(pop10="P001001"), year = 2010)
get_decennial(geography = "state", variables = c(pop00="P001001"), year = 2010,
output="wide")
options(tigris_class = "sf")      # SP is the default format returned by tigris
options(tigris_use_cache = TRUE)  # Save retrieved data locally
Sys.getenv('TIGRIS_CACHE_DIR')
dir(Sys.getenv('TIGRIS_CACHE_DIR') )
pop2010geo <- get_decennial(geography = "state",
variables = c(pop10="P001001"),
year = 2010,
output="wide",
geometry=TRUE) # Fetch geometry with the data for mapping
View(pop2010geo)
pop2010geo
plot(pop2010geo$geometry)
plot(pop2010geo)
pop2010geo_shifted <- get_decennial(geography = "state",
variables = c(pop10="P001001"),
output="wide",
year = 2010,
geometry=TRUE,
shift_geo=TRUE)
plot(pop2010geo_shifted$geometry)
plot(pop2010geo_shifted['pop10'])
ggplot(pop2010geo_shifted, aes(fill = pop10)) +
geom_sf()
west_pop10 <- get_decennial(geography = "county",
variables =  "P001001",
year = 2010,
state=c('CA','OR','NV',"AZ"),
geometry=T)
west_pop10['P001001']
plot(west_pop10['P001001'])
plot(west_pop10['P001001'])
View(west_pop10)
plot(west_pop10['P001001'])
plot(west_pop10['value'])
alco_pop10 <- get_decennial(geography = "tract",
variables = "P001001",
year = 2010,
state='CA',
county='Alameda',
geometry=T)
plot(alco_pop10['variable'])
plot(alco_pop10['variable'])
View(alco_pop10)
plot(alco_pop10['value'])
acs2016vars <- load_variables(year=2016, dataset = 'acs5', cache = T)
View(acs2016vars)
sf_poor <- get_acs(geography = "tract",
variables = c('C17002_002','C17002_003'), # poverty variables
year = 2016,
state="CA",
summary_var = "C17002_001", # Est of num people - denom
county="San Francisco",
geometry=T)
View(sf_poor)
plot(sf_poor['value'])
View(sf_poor)
plot(sf_poor['estimate'])
sf_poor <- subset(sf_poor, summary_est > 0)
plot(sf_poor['estimate'])
sf_poor <- sf_poor %>%
mutate(pct = 100 * (estimate / summary_est))
head(sf_poor, 3)
sf_poor_summed <- sf_poor %>%
select(GEOID, estimate, pct, geometry) %>%
group_by(GEOID) %>%
summarise(count_below_pov = sum(estimate),
pct_below_pov = sum(pct))
View(sf_poor_summed)
tigris?
tigris?
?tigris
cache = TRUE)     # Whether to save fetched data locally
??tigris
options(tigris_year=2015)
?tracts
tracts <- tracts(c("WA","OR"), cb=TRUE, year=2015)
plot(tracts$geometry)
head(tracts)
tracts_waor <- tracts(c("WA","OR"), cb=T, year=2015)
#
?tracts
tracts_waor <- tracts(c("WA","OR"), county=NULL, cb=T, year=2015)
tracts_waor <- tracts("WA", county=NULL, cb=T, year=2015)
